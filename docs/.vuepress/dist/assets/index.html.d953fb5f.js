import{c as n}from"./app.90383625.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript" aria-hidden="true">#</a> JavaScript</h1><h2 id="_1-\u7B80\u8FF0\u5BF9\u95ED\u5305\u7684\u7406\u89E3-\u4EE5\u53CA\u5176\u4F18\u7F3A\u70B9" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u8FF0\u5BF9\u95ED\u5305\u7684\u7406\u89E3-\u4EE5\u53CA\u5176\u4F18\u7F3A\u70B9" aria-hidden="true">#</a> 1.\u7B80\u8FF0\u5BF9\u95ED\u5305\u7684\u7406\u89E3\uFF0C\u4EE5\u53CA\u5176\u4F18\u7F3A\u70B9</h2><p>\u95ED\u5305\uFF1A\u51FD\u6570\u6267\u884C\u4EA7\u751F\u4E00\u4E2A\u4E0D\u88AB\u91CA\u653E\u7684\u79C1\u6709\u7684\u4E0A\u4E0B\u6587\uFF0C\u8FD9\u6837\u4E0D\u4EC5\u4FDD\u62A4\u91CC\u9762\u7684\u79C1\u6709\u53D8\u91CF\u4E0D\u53D7\u6C61\u67D3\uFF0C\u800C\u4E14\u8FD8\u53EF\u4EE5\u628A\u8FD9\u4E9B\u4FE1\u606F\u5B58\u50A8\u4E0B\u6765\u300C\u4FDD\u62A4+\u4FDD\u5B58\u300D</p><ol><li>\u7406\u8BBA\u77E5\u8BC6\uFF1A<br> \u6839\u636E v8 \u6267\u884C\u673A\u5236\uFF0C\u51FD\u6570\u6267\u884C\u65F6\u4EA7\u751F <code>\u79C1\u6709\u4E0A\u4E0B\u6587EC\uFF08Execution Context \uFF09</code>\uFF0C\u8FDB\u6808\u6267\u884C\uFF0C\u58F0\u660E\u7684\u53D8\u91CF\u90FD\u4FDD\u5B58\u5728 <code>\u53D8\u91CF\u5BF9\u8C61AO\uFF08Active Object\uFF09</code>\u4E2D\uFF0C\u9996\u5148<code>\u521D\u59CB\u5316\u4F5C\u7528\u57DF\u94FE</code>\u3001<code>\u5F62\u53C2\u8D4B\u503C</code>\u3001<code>\u53D8\u91CF\u63D0\u5347</code>\u4EE5\u53CA<code>\u4EE3\u7801\u6267\u884C</code>\uFF0C\u6B63\u5E38\u60C5\u51B5\u4E0B\u4EE3\u7801\u6267\u884C\u5B8C<code>\u51FA\u6808\u91CA\u653E</code>\uFF0C\u4F46\u662F\u7531\u4E8E<code>\u6D4F\u89C8\u5668\u5783\u573E\u56DE\u6536\u673A\u5236</code>\uFF0C\u5BFC\u81F4\u5F53\u524D\u4E0A\u4E0B\u6587\u4E2D\u7684\u67D0\u4E2A\u53D8\u91CF\u88AB\u4E0A\u4E0B\u6587\u4E4B\u5916\u7684\u4E1C\u897F\u5360\u7528\uFF0C\u4E0D\u80FD\u88AB\u91CA\u653E\uFF0C\u8FD9\u6837\u5C31\u5F62\u6210\u4E86<code>\u95ED\u5305</code>\uFF0C\u6240\u4EE5\u8BF4\u79C1\u6709\u53D8\u91CF\u4E0D\u53D7\u5916\u9762\u5E72\u6270\u548C\u6C61\u67D3\uFF0C\u53E6\u4E00\u65B9\u9762\u4E5F\u628A\u8FD9\u4E9B\u4E1C\u897F\u4FDD\u5B58\u4E0B\u6765\u4E86\uFF0C\u8FD9\u4E5F\u662F\u95ED\u5305\u7684\u4E24\u5927\u4F5C\u7528\u5427\uFF0C\u4FDD\u5B58\u548C\u4FDD\u62A4\u3002</li><li>\u7ED3\u5408\u5B9E\u6218 \u95ED\u5305\u5728\u9879\u76EE\u4E2D\u65E0\u65F6\u65E0\u523B\u4E0D\u5B58\u5728\uFF0C\u5728\u9879\u76EE\u4E2D\u7ECF\u5E38\u4F7F\u7528\uFF0C\u4E3E\u4F8B\uFF08\u5982\u5FAA\u73AF\u7ED1\u5B9A\u4E8B\u4EF6\u3002\u3002\u3002\uFF09</li><li>\u6DF1\u5165\u7814\u7A76 \u4E4B\u524D\u7814\u7A76 JS\uFF0C\u57FA\u4E8E\u95ED\u5305\u80FD\u5B9E\u73B0\u5F88\u591A\u7684\u51FD\u6570\u6280\u5DE7\uFF0C\u5982 JS \u9AD8\u7EA7\u7F16\u7A0B\u6280\u5DE7\uFF1A\u5355\u4F8B\u6A21\u5F0F\uFF08\u5DE5\u5177\u65B9\u6CD5\u5E93\uFF09\u3001\u60F0\u6027\u601D\u60F3\u3001\u67EF\u7406\u5316\u3001compose \u7EC4\u5408\u51FD\u6570</li><li>\u63D2\u4EF6\u548C\u6E90\u7801 JQ \u6E90\u7801\u91CC\u4E5F\u6709\u7528\u5230\u95ED\u5305\uFF08\u5DE5\u5382\u51FD\u6570\uFF09\uFF0CLodash \u6E90\u7801\u3001Redux \u6E90\u7801\uFF0C\u7C7B\u5E93\u548C\u7EC4\u4EF6\u7684\u5C01\u88C5\u3002\u3002\u3002</li></ol><p><code>\u7EFC\u8FF0</code>\uFF1A<br> \u6240\u4EE5\u6211\u8BA4\u4E3A\u95ED\u5305\u5C31\u662F JS \u5E95\u5C42\u7684\u673A\u5236\uFF0C\u5728\u5F00\u53D1\u8FC7\u7A0B\u4E2D\u65E0\u65F6\u65E0\u523B\u4E0D\u5728\u4F7F\u7528\uFF0C\u4F46\u662F\u95ED\u5305\u6D88\u8017\u7684\u5185\u5B58\u6BD4\u8F83\u5927\uFF0C\u6240\u4EE5\u8981\u5408\u7406\u4F7F\u7528\u3002\u3002\u3002</p><h2 id="_2-for-\u5FAA\u73AF\u548C-foreach-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_2-for-\u5FAA\u73AF\u548C-foreach-\u7684\u533A\u522B" aria-hidden="true">#</a> 2.for \u5FAA\u73AF\u548C forEach \u7684\u533A\u522B</h2><ol><li>for \u5FAA\u73AF\u4EE3\u8868\u7684\u662F\u547D\u4EE4\u662F\u7F16\u7A0B\u3001forEach \u4EE3\u8868\u7684\u662F\u51FD\u6570\u5F0F\u7F16\u7A0B\uFF1B</li><li>forEach \u5176\u5B9E\u5C31\u662F\u628A\u6570\u7EC4\u8FED\u4EE3\u7684\u64CD\u4F5C\u6B65\u9AA4\u5C01\u88C5\u597D\uFF0C\u8FD9\u6837\u6211\u4EEC\u5E94\u7528\u8D77\u6765\u4F1A\u66F4\u52A0\u65B9\u4FBF\uFF1B\u6211\u4E4B\u524D\u7814\u7A76\u8FC7 forEach \u7B49\u6570\u7EC4\u5E38\u89C1\u65B9\u6CD5\u7684\u6E90\u7801\uFF0CforEach \u5185\u90E8\u662F\u4F9D\u6B21\u8FED\u4EE3\u6570\u7EC4\u6BCF\u4E00\u9879\uFF0C\u6BCF\u4E00\u6B21\u8FED\u4EE3\u628A\u4F20\u9012\u7684\u56DE\u8C03\u51FD\u6570\u6267\u884C\uFF0C\u628A\u8FED\u4EE3\u7684\u5185\u5BB9\u53CA\u7D22\u5F15\u4F20\u9012\u7ED9\u56DE\u8C03\u51FD\u6570....\u76F4\u5230\u6574\u4E2A\u6570\u7EC4\u90FD\u8FED\u4EE3\u5B8C\u6BD5\u624D\u7ED3\u675F\uFF0C\u4E0D\u652F\u6301\u4E2D\u95F4\u4EE5\u4EFB\u4F55\u5F62\u5F0F\u8DF3\u8FC7\u6216\u8005\u7ED3\u675F\u8FED\u4EE3\u64CD\u4F5C\uFF01\uFF01\u800C for \u5FAA\u73AF\u662F\u547D\u4EE4\u5F0F\u7F16\u7A0B\uFF0C\u6240\u6709\u7684\u64CD\u4F5C\u6B65\u9AA4\u81EA\u5DF1\u53EF\u4EE5\u7BA1\u63A7\uFF0C\u60F3\u5565\u65F6\u5019\u7ED3\u675F\u5C31\u7ED3\u675F\uFF0C\u60F3\u548B\u5FAA\u73AF\u5C31\u548B\u5FAA\u73AF\uFF1B</li><li>\u6211\u5728\u9879\u76EE\u5F00\u53D1\u7684\u65F6\u5019\uFF0C\u4E00\u822C\u5E94\u7528\u7684\u90FD\u662F forEach\uFF0C\u8FD9\u6837\u53EF\u4EE5\u63D0\u9AD8\u6211\u7684\u5F00\u53D1\u6548\u7387\uFF0C\u51CF\u5C11\u4EE3\u7801\u7684\u5197\u4F59\uFF01\uFF01\u4F46\u662F\u9047\u5230\u4E00\u4E9B\u9700\u8981\u7075\u6D3B\u8FED\u4EE3\u7684\u9700\u6C42\uFF0C\u5219\u81EA\u5DF1\u57FA\u4E8E for \u5FAA\u73AF\u64CD\u4F5C\uFF01\uFF01</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">forEach</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_3-let-const-\u548C-var-\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#_3-let-const-\u548C-var-\u7684\u533A\u522B" aria-hidden="true">#</a> 3.let const \u548C var \u7684\u533A\u522B</h2><p><code>\u548CGO\u7684\u5173\u7CFB</code><br><code>\u53D8\u91CF\u63D0\u5347</code><br><code>\u91CD\u590D\u58F0\u660E</code><br><code>\u5757\u7EA7\u4F5C\u7528\u57DF</code><br><code>\u6682\u65F6\u6027\u6B7B\u533A</code></p><ol><li><p>let \u4E0D\u5B58\u5728\u53D8\u91CF\u63D0\u5347,\u4E0D\u5141\u8BB8\u5728\u5B9A\u4E49\u4E4B\u524D\u4F7F\u7528</p></li><li><p>let \u4E0D\u5141\u8BB8\u91CD\u590D\u58F0\u660E\u300C\u4E0D\u8BBA\u5F53\u524D\u4E0A\u4E0B\u6587\u4E2D\uFF0C\u57FA\u4E8E\u4F55\u79CD\u65B9\u5F0F\u58F0\u660E\u8FC7\u8FD9\u4E2A\u53D8\u91CF\uFF0C\u90FD\u4E0D\u5141\u8BB8\u57FA\u4E8E let \u518D\u6B21\u58F0\u660E\u300D</p></li><li><p>\u5728\u5168\u5C40\u4E0A\u4E0B\u6587\u4E2D\uFF0C\u57FA\u4E8E var/function \u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u662F\u7ED9 window(GO)\u8BBE\u7F6E\u7684\u5168\u5C40\u5C5E\u6027\uFF1B\u57FA\u4E8E let/const \u58F0\u660E\u7684\u53D8\u91CF\u662F\u653E\u5728 VO(G)\u4E2D\u7684\uFF0C\u548C GO \u6CA1\u6709\u4EFB\u4F55\u7684\u5173\u7CFB\uFF1B</p></li><li><p>let \u4F1A\u4EA7\u751F\u5757\u7EA7\u4E0A\u4E0B\u6587</p></li><li><p>let \u7684\u6682\u65F6\u6027\u6B7B\u533A\u95EE\u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a<span class="token punctuation">)</span>
<span class="token comment">// &quot;undefined&quot; \u57FA\u4E8Etypeof\u68C0\u6D4B\u4E00\u4E2A\u672A\u88AB\u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u7ED3\u679C\u4E0D\u4F1A\u62B1\u9519\uFF0C\u800C\u662F&quot;undefined&quot;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> a<span class="token punctuation">)</span>
<span class="token comment">// Uncaught ReferenceError: Cannot access &#39;a&#39; before initialization</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">100</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>\u57FA\u4E8E const \u58F0\u660E\u7684\u53D8\u91CF\uFF0C\u540E\u671F\u4E0D\u5141\u8BB8\u66F4\u6539\u5176\u6307\u9488\u6307\u5411\uFF08\u4E5F\u5C31\u662F\u4E0D\u80FD\u91CD\u65B0\u8D4B\u503C\u4E3A\u5176\u4ED6\u7684\u503C\uFF09;</p></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a<span class="token punctuation">;</span> <span class="token comment">// Uncaught SyntaxError: Missing initializer in const declaration</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>
a <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span> <span class="token comment">// Uncaught TypeError: Assignment to constant variable</span>

<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;abc&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;edf&#39;</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;edf&#39;}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_4-\u9632\u6296\u548C\u8282\u6D41" tabindex="-1"><a class="header-anchor" href="#_4-\u9632\u6296\u548C\u8282\u6D41" aria-hidden="true">#</a> 4.\u9632\u6296\u548C\u8282\u6D41</h2><p>\u516C\u7528\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">clearTimer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">timer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  timer <span class="token operator">?</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>\u9632\u6296\uFF1A\u7528\u6237\u9891\u7E41\u8FDB\u884C\u67D0\u9879\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u53EA\u8BC6\u522B\u4E00\u6B21\u300C\u81EA\u5B9A\u4E49\u9891\u7E41\u7684\u89C4\u5219\u3001\u81EA\u5B9A\u4E49\u89E6\u53D1\u8FB9\u754C...\u300D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">debounce</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">,</span> immediate <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> now <span class="token operator">=</span> <span class="token operator">!</span>timer <span class="token operator">&amp;&amp;</span> immediate
    timer <span class="token operator">=</span> <span class="token function">clearTimer</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
    timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      timer <span class="token operator">=</span> <span class="token function">clearTimer</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
      <span class="token operator">!</span>immediate <span class="token operator">?</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> wait<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>now<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u8282\u6D41\uFF1A\u201C\u964D\u9891\u201D\uFF0C\u7528\u6237\u9891\u7E41\u8FDB\u884C\u67D0\u9879\u64CD\u4F5C\u7684\u65F6\u5019\uFF0C\u964D\u4F4E\u9ED8\u8BA4\u7684\u89E6\u53D1\u9891\u7387</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">throttle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn<span class="token punctuation">,</span> wait <span class="token operator">=</span> <span class="token number">300</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    previous <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> now <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">let</span> remaining <span class="token operator">=</span> wait <span class="token operator">-</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> previous<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>remaining <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      timer <span class="token operator">=</span> <span class="token function">clearTimer</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
      previous <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>timer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        timer <span class="token operator">=</span> <span class="token function">clearTimer</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span>
        previous <span class="token operator">=</span> <span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> remaining<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h2 id="_5-object-prototype-haspubproperty" tabindex="-1"><a class="header-anchor" href="#_5-object-prototype-haspubproperty" aria-hidden="true">#</a> 5.Object.prototype.hasPubProperty</h2><ol><li><p>Object.prototype.hasOwnProperty\uFF1A\u7528\u6765\u68C0\u6D4B\u662F\u5426\u4E3A\u79C1\u6709\u5C5E\u6027<br> \u8BED\u6CD5\uFF1A[\u5BF9\u8C61].hasOwnProperty([\u5C5E\u6027])<br> \u68C0\u6D4B[\u5C5E\u6027]\u662F\u5426\u4E3A[\u5BF9\u8C61]\u7684\u79C1\u6709\u5C5E\u6027\uFF0C\u662F\u8FD4\u56DE TRUE\uFF0C\u4E0D\u662F\u5219\u8FD4\u56DE FALSE\uFF1B\u53EA\u770B\u79C1\u6709\u4E2D\u6709\u6CA1\u6709(\u548C\u516C\u6709\u4E0D\u5B58\u5728\u6CA1\u5173\u7CFB)</p></li><li><p>in \u64CD\u4F5C\u7B26<br> \u8BED\u6CD5\uFF1A[\u5C5E\u6027] in [\u5BF9\u8C61]<br> \u68C0\u6D4B[\u5C5E\u6027]\u662F\u5426\u7387\u5C5E\u4E8E\u8FD9\u4E2A[\u5BF9\u8C61]\uFF0C\u4E0D\u8BBA\u516C\u6709\u8FD8\u662F\u79C1\u6709\uFF0C\u53EA\u8981\u80FD\u8BBF\u95EE\u5230\u8FD9\u4E2A\u5C5E\u6027\uFF0C\u5219\u7ED3\u679C\u5C31\u662F TRUE</p></li></ol><p>\u601D\u8DEF 1(\u4E0D\u51C6\u786E)\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">hasPubProperty</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">hasPubProperty</span><span class="token punctuation">(</span><span class="token parameter">attr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u601D\u8DEF\uFF1A\u662F\u5BF9\u8C61\u7684\u5C5E\u6027\uFF0C\u800C\u4E14\u8FD8\u4E0D\u662F\u79C1\u6709\u7684\u5C5E\u6027\uFF0C\u8FD9\u6837\u53EA\u80FD\u662F\u516C\u6709\u5C5E\u6027\u4E86</span>
  <span class="token comment">// \u95EE\u9898\uFF1A\u5982\u679Cattr\u65E2\u662F\u79C1\u6709\u7684\u5C5E\u6027\uFF0C\u4E5F\u662F\u516C\u6709\u7684\u5C5E\u6027\uFF0C\u57FA\u4E8E\u8FD9\u79CD\u65B9\u6848\u68C0\u6D4B\u7ED3\u679C\u662Ffalse</span>
  <span class="token keyword">return</span> attr <span class="token keyword">in</span> <span class="token keyword">this</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>\u601D\u8DEF 2(\u51C6\u786E)\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">hasPubProperty</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">hasPubProperty</span><span class="token punctuation">(</span><span class="token parameter">attr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// this-&gt;obj\u8981\u5904\u7406\u7684\u5BF9\u8C61  attr-&gt;&#39;toString&#39;\u8981\u68C0\u6D4B\u7684\u5C5E\u6027</span>
  <span class="token comment">// \u601D\u8DEF\uFF1A\u8DF3\u8FC7\u79C1\u6709\u5C5E\u6027\u7684\u67E5\u627E\uFF0C\u76F4\u63A5\u5728\u516C\u6709\u5C5E\u6027\u4E2D\u67E5\u627E\uFF0C\u770B\u770B\u662F\u5426\u5B58\u5728</span>
  <span class="token comment">// Object.getPrototypeOf([\u5B9E\u4F8B\u5BF9\u8C61])\uFF1A</span>
  <span class="token comment">// \u83B7\u53D6\u5F53\u524D\u5B9E\u4F8B\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61(\u6216\u8005\u83B7\u53D6\u201C\u5B9E\u4F8B\u5BF9\u8C61.__proto__\u201D)</span>
  <span class="token keyword">let</span> proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>proto<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>proto<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>attr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">true</span>
    proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;leon&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">13</span><span class="token punctuation">,</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasPubProperty</span><span class="token punctuation">(</span><span class="token string">&#39;toString&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//true</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="_6-call\u3001apply-\u548C-bind" tabindex="-1"><a class="header-anchor" href="#_6-call\u3001apply-\u548C-bind" aria-hidden="true">#</a> 6.call\u3001apply \u548C bind</h2><p>Function.prototype</p><ul><li>call</li><li>apply</li><li>bind<br> \u6240\u6709\u7684\u51FD\u6570\u90FD\u662F Function \u7C7B\u7684\u5B9E\u4F8B\uFF0C\u6240\u4EE5\u6240\u6709\u51FD\u6570\u90FD\u53EF\u4EE5\u8C03\u7528\u8FD9\u4E09\u4E2A\u65B9\u6CD5\uFF1B\u800C\u8FD9\u4E2A\u4E09\u4E2A\u65B9\u6CD5\u90FD\u662F\u7528\u6765\u6539\u53D8\u51FD\u6570\u4E2D\u7684 THIS \u6307\u5411\u7684\uFF1B</li></ul><p>call VS apply</p><ul><li>\u90FD\u662F\u628A\u51FD\u6570\u7ACB\u5373\u6267\u884C\uFF0C\u6539\u53D8\u51FD\u6570\u4E2D\u7684 this \u6307\u5411\u7684\u300C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F\u8C01\uFF0C\u5C31\u628A this \u6539\u4E3A\u8C01\u300D</li><li>\u552F\u4E00\u533A\u522B\uFF1Aapply \u8981\u6C42\u628A\u4F20\u9012\u7ED9\u51FD\u6570\u7684\u5B9E\u53C2\uFF0C\u4EE5\u6570\u7EC4\u7684\u5F62\u5F0F\u7BA1\u7406\u8D77\u6765\u300C\u6700\u7EC8\u6548\u679C\u548C call \u4E00\u6837\uFF0C\u4E5F\u662F\u628A\u6570\u7EC4\u4E2D\u6BCF\u4E00\u9879\uFF0C\u4E00\u4E2A\u4E2A\u7684\u4F20\u7ED9\u51FD\u6570\u300D</li><li>\u771F\u5B9E\u9879\u76EE\u4E2D\u5EFA\u8BAE\u5927\u5BB6\u4F7F\u7528 call\uFF0C\u56E0\u4E3A\u5176\u6027\u80FD\u597D\u4E00\u4E9B\u300C\u505A\u8FC7\u6D4B\u8BD5\uFF1A\u4E09\u4E2A\u53CA\u4EE5\u4E0A\u53C2\u6570\uFF0Ccall \u7684\u6027\u80FD\u660E\u663E\u6BD4 apply \u597D\u4E00\u4E9B\u300D</li></ul><p>call VS bind</p><ul><li>call \u662F\u628A\u51FD\u6570\u7ACB\u5373\u6267\u884C\uFF0C\u800C bind \u53EA\u662F\u9884\u5904\u7406\u51FD\u6570\u4E2D\u7684 this \u548C\u53C2\u6570\uFF0C\u51FD\u6570\u6B64\u65F6\u5E76\u6CA1\u6709\u6267\u884C</li></ul><p><code>call</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">call</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> <span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>context <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> context <span class="token operator">=</span> window
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(object|function)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> context<span class="token punctuation">)</span><span class="token punctuation">)</span> context <span class="token operator">=</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    result
  context<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>
  result <span class="token operator">=</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>params<span class="token punctuation">)</span>
  Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y
<span class="token punctuation">}</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;obj&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;leon&#39;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><code>bind</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">bind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">bind</span><span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> <span class="token operator">...</span>params</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    params <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token operator">...</span>params<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,36);function t(e,o){return p}var r=s(a,[["render",t]]);export{r as default};
